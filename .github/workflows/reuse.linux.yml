name: Linux

on:
  workflow_call:
    inputs:
      build_profile:
        description: "Build profile, debug or release"
        type: string
        required: true
        default: "debug"
      runner_provider:
        description: "Self-hosted runner provider, aws or gcp"
        type: string
        required: true
        default: "aws"

env:
  BUILD_PROFILE: ${{ inputs.build_profile }}
  RUNNER_PROVIDER: ${{ inputs.runner_provider }}

jobs:
  check:
    runs-on: [ self-hosted, X64, Linux, 16c32g, "${{ inputs.runner_provider }}" ]
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/check
        timeout-minutes: 60
        with:
          github_token: ${{ github.token }}

  license:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    outputs:
      license: ${{ steps.license.outputs.license }}
    steps:
      - uses: actions/checkout@v4
      - name: Get License from S3
        if: inputs.runner_provider == 'aws'
        run: |
          aws s3 cp s3://databend-ci/misc/license.key license.key
          aws s3 cp s3://databend-ci/misc/license.json license.json
      - name: Get License from GCS
        if: inputs.runner_provider == 'gcp'
        run: |
          gcloud storage cp gs://databend-ci/misc/license.key license.key
          gcloud storage cp gs://databend-ci/misc/license.json license.json
      - name: Output License
        id: license
        run: |
          echo "license=$(cat license.key | base64 -w 0)" >> $GITHUB_OUTPUT
          cat license.json

  build:
    runs-on:
      - self-hosted
      - "${{ matrix.runner }}"
      - Linux
      - 16c32g
      - "${{ inputs.runner_provider }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: x86_64, runner: X64 }
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        timeout-minutes: 60
        with:
          sha: ${{ github.sha }}
          target: ${{ matrix.arch }}-unknown-linux-gnu
          artifacts: all

  build_udf:
    runs-on:
      - self-hosted
      - "${{ matrix.runner }}"
      - Linux
      - 16c32g
      - "${{ inputs.runner_provider }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: x86_64, runner: X64 }
          # - { arch: aarch64, runner: ARM64 }
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        timeout-minutes: 60
        with:
          sha: ${{ github.sha }}
          target: ${{ matrix.arch }}-unknown-linux-gnu
          features: python-udf
          category: udf
          artifacts: query

  build_address_sanitizer:
    runs-on:
      - self-hosted
      - "${{ matrix.runner }}"
      - Linux
      - 16c32g
      - "${{ inputs.runner_provider }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: aarch64, runner: ARM64 }
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_linux_sanitizer
        timeout-minutes: 60
        with:
          target: ${{ matrix.arch }}-unknown-linux-gnu
          artifacts: query

  build_musl:
    runs-on: [ self-hosted, X64, Linux, 16c32g, "${{ inputs.runner_provider }}" ]
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        timeout-minutes: 60
        with:
          sha: ${{ github.sha }}
          target: ${{ matrix.arch }}-unknown-linux-musl
          artifacts: query

  test_unit:
    runs-on: [ self-hosted, X64, Linux, 16c32g, "${{ inputs.runner_provider }}" ]
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags, metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_unit
        timeout-minutes: 60

  test_metactl:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_metactl
        timeout-minutes: 10

  test_compat_meta_query:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_compat_meta_query
        timeout-minutes: 10

  test_compat_fuse:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_compat_fuse
        timeout-minutes: 20

  test_compat_meta_meta:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_compat_meta_meta
        timeout-minutes: 20

  test_logs:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_logs
        timeout-minutes: 20

  test_meta_cluster:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_meta_cluster
        timeout-minutes: 10

  test_stateless_standalone:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateless_standalone_linux
        timeout-minutes: 15

  test_stateless_cluster:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateless_cluster_linux
        timeout-minutes: 15

  test_stateful_standalone:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateful_standalone_linux
        timeout-minutes: 10
      - name: Upload failure
        if: failure()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-standalone-linux

  test_stateful_cluster:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateful_cluster_linux
        timeout-minutes: 15
      - name: Upload failure
        if: failure()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-cluster-linux

  test_stateful_large_data:
    if: contains(github.event.pull_request.labels.*.name, 'ci-largedata')
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateful_large_data
        timeout-minutes: 60

  test_stateful_iceberg_rest:
    runs-on: [ self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}" ]
    needs: [ build, check ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test_stateful_iceberg_rest_standalone
        timeout-minutes: 10
      - name: Upload failure
        if: failure()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-iceberg-rest-standalone

  # test_fuzz_standalone:
  #   runs-on: [self-hosted, X64, Linux, 4c8g, "${{ inputs.runner_provider }}"]
  #   needs: [build, check]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/test_fuzz_standalone_linux
  #       timeout-minutes: 10
  #       continue-on-error: true


  sqllogic:
    needs: [ build, check ]
    uses: ./.github/workflows/reuse.sqllogic.yml
    secrets: inherit
    with:
      build_profile: ${{ inputs.build_profile }}
      runner_provider: ${{ inputs.runner_provider }}
